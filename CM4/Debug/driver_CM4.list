
driver_CM4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08100000  08100000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000000fc  08100298  08100298  00010298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08100394  0810039c  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08100394  08100394  00010394  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08100398  08100398  00010398  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  10000000  10000000  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  10000000  0810039c  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  1000001c  0810039c  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  0001039c  2**0
                  CONTENTS, READONLY
  9 .debug_info   000000a8  00000000  00000000  000103cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000005b  00000000  00000000  00010474  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 00000048  00000000  00000000  000104d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00000030  00000000  00000000  00010518  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  00000f6a  00000000  00000000  00010548  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00000409  00000000  00000000  000114b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    00003bb7  00000000  00000000  000118bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000053  00000000  00000000  00015472  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000054  00000000  00000000  000154c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08100298 <__do_global_dtors_aux>:
 8100298:	b510      	push	{r4, lr}
 810029a:	4c05      	ldr	r4, [pc, #20]	; (81002b0 <__do_global_dtors_aux+0x18>)
 810029c:	7823      	ldrb	r3, [r4, #0]
 810029e:	b933      	cbnz	r3, 81002ae <__do_global_dtors_aux+0x16>
 81002a0:	4b04      	ldr	r3, [pc, #16]	; (81002b4 <__do_global_dtors_aux+0x1c>)
 81002a2:	b113      	cbz	r3, 81002aa <__do_global_dtors_aux+0x12>
 81002a4:	4804      	ldr	r0, [pc, #16]	; (81002b8 <__do_global_dtors_aux+0x20>)
 81002a6:	f3af 8000 	nop.w
 81002aa:	2301      	movs	r3, #1
 81002ac:	7023      	strb	r3, [r4, #0]
 81002ae:	bd10      	pop	{r4, pc}
 81002b0:	10000000 	.word	0x10000000
 81002b4:	00000000 	.word	0x00000000
 81002b8:	0810037c 	.word	0x0810037c

081002bc <frame_dummy>:
 81002bc:	b508      	push	{r3, lr}
 81002be:	4b03      	ldr	r3, [pc, #12]	; (81002cc <frame_dummy+0x10>)
 81002c0:	b11b      	cbz	r3, 81002ca <frame_dummy+0xe>
 81002c2:	4903      	ldr	r1, [pc, #12]	; (81002d0 <frame_dummy+0x14>)
 81002c4:	4803      	ldr	r0, [pc, #12]	; (81002d4 <frame_dummy+0x18>)
 81002c6:	f3af 8000 	nop.w
 81002ca:	bd08      	pop	{r3, pc}
 81002cc:	00000000 	.word	0x00000000
 81002d0:	10000004 	.word	0x10000004
 81002d4:	0810037c 	.word	0x0810037c

081002d8 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 81002d8:	b480      	push	{r7}
 81002da:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 81002dc:	e7fe      	b.n	81002dc <main+0x4>
	...

081002e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 81002e0:	480d      	ldr	r0, [pc, #52]	; (8100318 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 81002e2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 81002e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 81002e8:	480c      	ldr	r0, [pc, #48]	; (810031c <LoopForever+0x6>)
  ldr r1, =_edata
 81002ea:	490d      	ldr	r1, [pc, #52]	; (8100320 <LoopForever+0xa>)
  ldr r2, =_sidata
 81002ec:	4a0d      	ldr	r2, [pc, #52]	; (8100324 <LoopForever+0xe>)
  movs r3, #0
 81002ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 81002f0:	e002      	b.n	81002f8 <LoopCopyDataInit>

081002f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 81002f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 81002f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 81002f6:	3304      	adds	r3, #4

081002f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 81002f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 81002fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 81002fc:	d3f9      	bcc.n	81002f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 81002fe:	4a0a      	ldr	r2, [pc, #40]	; (8100328 <LoopForever+0x12>)
  ldr r4, =_ebss
 8100300:	4c0a      	ldr	r4, [pc, #40]	; (810032c <LoopForever+0x16>)
  movs r3, #0
 8100302:	2300      	movs	r3, #0
  b LoopFillZerobss
 8100304:	e001      	b.n	810030a <LoopFillZerobss>

08100306 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8100306:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8100308:	3204      	adds	r2, #4

0810030a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 810030a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 810030c:	d3fb      	bcc.n	8100306 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 810030e:	f000 f811 	bl	8100334 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8100312:	f7ff ffe1 	bl	81002d8 <main>

08100316 <LoopForever>:

LoopForever:
    b LoopForever
 8100316:	e7fe      	b.n	8100316 <LoopForever>
  ldr   r0, =_estack
 8100318:	10048000 	.word	0x10048000
  ldr r0, =_sdata
 810031c:	10000000 	.word	0x10000000
  ldr r1, =_edata
 8100320:	10000000 	.word	0x10000000
  ldr r2, =_sidata
 8100324:	0810039c 	.word	0x0810039c
  ldr r2, =_sbss
 8100328:	10000000 	.word	0x10000000
  ldr r4, =_ebss
 810032c:	1000001c 	.word	0x1000001c

08100330 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8100330:	e7fe      	b.n	8100330 <ADC1_2_IRQHandler>
	...

08100334 <__libc_init_array>:
 8100334:	b570      	push	{r4, r5, r6, lr}
 8100336:	4d0d      	ldr	r5, [pc, #52]	; (810036c <__libc_init_array+0x38>)
 8100338:	4c0d      	ldr	r4, [pc, #52]	; (8100370 <__libc_init_array+0x3c>)
 810033a:	1b64      	subs	r4, r4, r5
 810033c:	10a4      	asrs	r4, r4, #2
 810033e:	2600      	movs	r6, #0
 8100340:	42a6      	cmp	r6, r4
 8100342:	d109      	bne.n	8100358 <__libc_init_array+0x24>
 8100344:	4d0b      	ldr	r5, [pc, #44]	; (8100374 <__libc_init_array+0x40>)
 8100346:	4c0c      	ldr	r4, [pc, #48]	; (8100378 <__libc_init_array+0x44>)
 8100348:	f000 f818 	bl	810037c <_init>
 810034c:	1b64      	subs	r4, r4, r5
 810034e:	10a4      	asrs	r4, r4, #2
 8100350:	2600      	movs	r6, #0
 8100352:	42a6      	cmp	r6, r4
 8100354:	d105      	bne.n	8100362 <__libc_init_array+0x2e>
 8100356:	bd70      	pop	{r4, r5, r6, pc}
 8100358:	f855 3b04 	ldr.w	r3, [r5], #4
 810035c:	4798      	blx	r3
 810035e:	3601      	adds	r6, #1
 8100360:	e7ee      	b.n	8100340 <__libc_init_array+0xc>
 8100362:	f855 3b04 	ldr.w	r3, [r5], #4
 8100366:	4798      	blx	r3
 8100368:	3601      	adds	r6, #1
 810036a:	e7f2      	b.n	8100352 <__libc_init_array+0x1e>
 810036c:	08100394 	.word	0x08100394
 8100370:	08100394 	.word	0x08100394
 8100374:	08100394 	.word	0x08100394
 8100378:	08100398 	.word	0x08100398

0810037c <_init>:
 810037c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810037e:	bf00      	nop
 8100380:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8100382:	bc08      	pop	{r3}
 8100384:	469e      	mov	lr, r3
 8100386:	4770      	bx	lr

08100388 <_fini>:
 8100388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810038a:	bf00      	nop
 810038c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 810038e:	bc08      	pop	{r3}
 8100390:	469e      	mov	lr, r3
 8100392:	4770      	bx	lr
